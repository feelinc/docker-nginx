user www-data;
worker_processes 2;
pid /run/nginx.pid;

events {
	worker_connections  2048;
	multi_accept on;
	use epoll;
}

http {
	sendfile off;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	map $remote_addr $rt_filtered_ip {
		default $binary_remote_addr;
		#180.253.248.4 "";
	}

	limit_req_zone $rt_filtered_ip zone=app80:10m rate=2r/s;
	limit_req_zone $rt_filtered_ip zone=app443:10m rate=2r/s;

	# don't send the nginx version number in error pages and Server header
	server_tokens off;

	# config to don't allow the browser to render the page inside an frame or iframe
	# and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
	# if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
	# https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
	add_header X-Frame-Options SAMEORIGIN;

	# when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
	# to disable content-type sniffing on some browsers.
	# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
	# currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
	# http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
	# 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
	add_header X-Content-Type-Options nosniff;

	# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
	# It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
	# this particular website if it was disabled by the user.
	# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
	add_header X-XSS-Protection "1; mode=block";

	client_max_body_size 64m;
	client_header_buffer_size 16k;
	large_client_header_buffers 4 16k;

	## Flood protection example
	limit_req_zone $binary_remote_addr zone=goeasy:25m rate=1r/s;

	## Cache open FD
	#open_file_cache max=10000 inactive=3600s;
	#open_file_cache_valid 7200s;
	#open_file_cache_min_uses 2;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	                  '$status $body_bytes_sent "$http_referer" '
	                  '"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log  main;

	## Gzipping is an easy way to reduce page weight
	gzip                on;
	gzip_vary           on;
	gzip_proxied        any;
	gzip_types
    text/plain
    text/css
    text/js
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/xml+rss
    image/svg+xml;
	gzip_buffers        16 8k;
	gzip_comp_level     6;
	gzip_min_length     1100;
	gzip_disable        "msie6";

	## ngx_pagespeed config
	#pagespeed off;
	#pagespeed FileCachePath /var/lib/nginx/ngx_pagespeed;

	## Map bad user agents
	include /etc/nginx/conf.d/spider.conf;

	## Map status to exclude from access log
	map $status $writelog { 404  0; 410  0; 444  0; default 1; }

	# include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-available/*;
}

daemon off;
